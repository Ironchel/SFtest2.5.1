
from ship import Ship
from board import Board
from players import Players
from user import User
from ai import AI
from mistake import Mistake
from random import randint
import time



class Game:
    """
    üïú üïë üïù üïí üïû üïì üïü üïî üï† üïï üï° üïñ
     –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–≤–∞—Ç—å –Ω–∞ –∏–≥—Ä—É –º–æ—Ä—Å–∫–æ–π –±–æ–π
    üëπ üë∫ üëª üëΩ üëæ ü§ñ üß† ü¶∑ ü¶¥ üëÄ üëÅ üëÖ


    –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Å –∫–µ–º –∏–≥—Ä–∞—Ç—å: –ö–æ–º–ø—å—é—Ç–µ—Ä–æ–º –∏–ª–∏ —Å –ò–≥—Ä–æ–∫–æ–º

    –ö–æ–º–ø—å—é—Ç–µ—Ä –∏–º–µ–µ—Ç –¥–≤–∞ —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: –°–ª–æ–∂–Ω—ã–π –∏ –õ–µ–≥–∫–∏–π

     –ü—Ä–∞–≤–∏–ª–∞ —Å–ª–µ–¥—É—é—â–∏–µ:
     1) –í—ã —Ä–∞–∑–º–µ—â–∞–µ—Ç–µ –≤—Å–µ —Å–≤–æ–∏ –∫–æ—Ä–∞–±–ª–∏ –ø–æ –∫–∞—Ä—Ç–µ.

     –£ –≤–∞—Å –µ—Å—Ç—å 3 –≤–∏–¥–∞ –∫–æ—Ä–∞–±–ª–µ–π:
     –∞) 3-—Ö –ø–∞–ª—É–±–Ω—ã–π - 1 —à—Ç
     –±) 2-—Ö –ø–∞–ª—É–±–Ω—ã–π - 2 —à—Ç
     –≤) 1-—Ö –ø–∞–ª—É–±–Ω—ã–π - 4 —à—Ç

     –í—ã—Å—Ç–∞–≤–ª—è—Ç—å –∫–æ—Ä–∞–±–ª–∏ –≤—ã –º–æ–∂–µ—Ç–µ –≤ –ª—é–±–æ–º –ø–æ—Ä—è–¥–∫–µ.
     –°–Ω–∞—á–∞–ª–æ –≤—ã–±–∏—Ä–∞–π—Ç–µ —Ç–∏–ø –∫–æ—Ä–∞–±–ª—è, –∑–∞—Ç–µ–º —É–∫–∞–∑—ã–≤–∞–µ—Ç–µ —Ç–æ—á–∫–∏ –≥–¥–µ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –∫–æ—Ä–∞–±–ª—å.
     –¢–æ—á–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏ –∏ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –±—É–∫–≤—ã –∑–∞—Ç–µ–º —Ü—ã—Ñ—Ä–∞
     –§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ (–ø—Ä–∏–º–µ—Ä): –¢–∏–ø = 3 –¢–æ—á–∫–∏ = B3 C3 D3

     2) –£ –≤–∞—Å –µ—Å—Ç—å –¥–≤–µ –∫–∞—Ä—Ç—ã –æ–¥–Ω–∞ –≤–∞—à–∞ (–≤–µ—Ä—Ö–Ω—è—è), –¥—Ä—É–≥–∞—è –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∏ (–Ω–∏–∂–Ω—è—è)
     –í—ã—Å—Ç–∞–≤–ª—è–π—Ç–µ –∫–æ—Ä–∞–±–ª–∏, –∞ —Ç–∞–∫ –∂–µ —Å—Ç—Ä–µ–ª—è–π—Ç–µ –≤ –≥—Ä–∞–Ω–∏—Ü–µ –∫–∞—Ä—Ç—ã

     3) –ü–æ—Å–ª–µ —Ä–∞—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∞–±–ª–µ–π –∏–≥—Ä–æ–∫–∏ –º–æ–∂—É—Ç –Ω–∞—á–∞—Ç—å –æ–≥–æ–Ω—å
     –ö–∞–∫ –∏ —Å –∫–æ—Ä–∞–±–ª—è–º–∏ –≤—ã–±–∏—Ä–∞–π—Ç–µ —Ç–æ—á–∫—É (–æ–¥–Ω—É)
     –§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ (–ø—Ä–∏–º–µ—Ä): –¢–æ—á–∫–∞ = F6
     –ï—Å–ª–∏ –ø–æ–ø–∞–ª–∏ –ø–æ –∫–æ—Ä–∞–±–ª—é –≤—ã –º–æ–∂–µ—Ç–µ —Å—Ç—Ä–µ–ª—è—Ç—å –µ—â—ë —Ä–∞–∑

     4) –ò–Ω–¥–∏–∫–∞—Ç—Ä—ã –≤ –∏–≥—Ä–µ:
     –ü—É—Å—Ç–æ–µ –º–µ—Å—Ç–æ =              'üîé'
     –ü—Ä–æ–º–∞—Ö –≤–∞—à –∏–ª–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ = 'üí©'
     –ü–æ–ø–∞–¥–∞–Ω–∏–µ –≤ –∫–æ—Ä–∞–±–ª—å =       'üíÄ'
     –í–∞—à –∫–æ—Ä–∞–±–ª—å =               'ü§°'

     5) –ò–≥—Ä–∞ –¥–ª–∏—Ç—Å—è –¥–æ —É–Ω–∏–∂—Ç–æ—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ—Ä–∞–±–ª–µ–π –æ–¥–Ω–æ–≥–æ –∏–∑ –∏–≥—Ä–æ–∫–æ–≤

     6) –ù–∞—á–∏–Ω–∞–µ—Ç —Å—Ç—Ä–µ–ª—è—Ç—å –ò–≥—Ä–æ–∫ 1

     ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ‚åõ"""

    amount = 0
    antwort = 0
    def arrange_ships(self):
        """The function of installing all ships on the map from users"""
        while True:
            check_ship = 0
            print(f"–†–∞—Å—Ç–∞–≤—å—Ç–µ –∫–æ—Ä–∞–±–ª–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∏–ª–∞–º {self.player_1_name}\n"
                  f"–≠—Ç–æ –≤–∞—à–∞ –∫–∞—Ä—Ç–∞")
            self.player_1.player_map.show_map()
            print("–≠—Ç–æ –∫–∞—Ä—Ç–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞")
            self.player_1.player_map_enemy.show_map()
            while not check_ship:
                check_ship = Mistake.check_ship(self,*self.player_1.choose_place_ship())
            if self.player_1.move_ship(self.player_1.get_type(),check_ship):
                Mistake.more_print(self)
                time.sleep(4)
                continue
            self.ship_1 = Ship(self.player_1.get_type(),check_ship,1)
            self.player_1.set_list_area(self.ship_1.get_ship_area)
            self.player_1.player_map.installer_pic(self.ship_1.get_ship_dot(),4)
            print('–ö–æ—Ä–∞–±–ª—å —Å–æ–∑–¥–∞–Ω')
            if not self.player_1.get_list_ship():
                break
        if self.amount:
            input("\n\n\n\n\n–°–µ–π—á–∞—Å –±—É–¥–µ—Ç –≤—ã–±–∏—Ä–∞—Ç—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ –∫–æ—Ä–∞–±–ª–∏.\n"
                  "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–ø—Ä—è—á—å—Ç–µ —Å–≤–æ–∏ –∫–æ—Ä–∞–±–ª–∏\n"
                  "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ —á—Ç–æ —É–≥–æ–¥–Ω–æ\n\n\n\n")
            while True:
                check_ship = 0
                print(f"–†–∞—Å—Ç–∞–≤—å—Ç–µ –∫–æ—Ä–∞–±–ª–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∏–ª–∞–º {self.player_2_name}\n"
                      f"–≠—Ç–æ –≤–∞—à–∞ –∫–∞—Ä—Ç–∞")
                self.player_2.player_map.show_map()
                print("–≠—Ç–æ –∫–∞—Ä—Ç–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞")
                self.player_2.player_map_enemy.show_map()
                while not check_ship:
                    check_ship = Mistake.check_ship(self, *self.player_2.choose_place_ship())
                if self.player_2.move_ship(self.player_2.get_type(), check_ship):
                    Mistake.more_print(self)
                    time.sleep(4)
                    continue
                self.ship_2 = Ship(self.player_2.get_type(), check_ship,2)
                self.player_2.set_list_area(self.ship_2.get_ship_area)
                self.player_2.player_map.installer_pic(self.ship_2.get_ship_dot(), 4)
                print('–ö–æ—Ä–∞–±–ª—å —Å–æ–∑–¥–∞–Ω')
                if not self.player_2.get_list_ship():
                    break
            input("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n–ò–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è\n\n"
                      "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–ø—Ä—è—á—å—Ç–µ —Å–≤–æ–∏ –∫–æ—Ä–∞–±–ª–∏\n\n"
                      "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ —á—Ç–æ —É–≥–æ–¥–Ω–æ\n\n: ")
            self.shooting(self)

    def choice_two_players(self):
        """Function for entering usernames and creating a user class"""
        print("\n–í–≤–µ–¥–∏—Ç–µ –í–∞—à–∏ –∏–º–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞, –ò–≥—Ä–æ–∫ 1")
        self.player_1_name = input(': ')
        print("\n–¢–µ–ø–µ—Ä—å –ò–≥—Ä–æ–∫ 2\n")
        self.player_2_name = input(': ')
        print("\n–†–∞—Å—Ç–∞–≤–ª—è–π—Ç–µ –≤—Å–µ –∫–æ—Ä–∞–±–ª–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏\n")
        self.player_1 = User()
        self.player_2 = User()
        self.amount = 1
        self.arrange_ships(self)

    def choice_AI_player(self):
        """Function for playing with the computer,
        starts the installation of the user's ships and
        arranges the computer's ships automatically"""
        print("\n–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –∏–º—è.")
        self.player_1_name = input(': ')
        self.player_1 = User()
        self.arrange_ships(self)
        ship_AI = [3,2,2,1,1,1,1]
        while True:
            self.player_AI = AI()
            count = 0
            for item in ship_AI:
                while count !=500:
                    check_ship = self.player_AI.ship_and_dot_AI(item,self.player_AI.random_step())
                    check_move = self.player_AI.move_ship(item, check_ship)
                    if check_move:
                        count += 1
                        continue
                    else:
                        break
                if count == 500:
                    break
                self.ship_AI = Ship(item, check_ship,3)
                self.player_AI.set_list_area(self.ship_AI.get_ship_area)
                self.player_AI.player_map.installer_pic(self.ship_AI.get_ship_dot(), 4)
            if count == 500:
                continue
            break
        print("–ö–æ—Ä–∞–±–ª–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ —Å–æ–∑–¥–∞–Ω—ã")
        self.shooting(self)

    def shooting(self):
        """Feature shots, from users and from the computer. However, it is a cycle of player moves.
            In fact, the main function that runs other parts of the code.
            And also, when the condition of victory is reached, it shows the winner"""
        count_ship_AI_dest = 0
        count_ship_player_1_dest =0
        count_ship_player_2_dest =0
        winner = ""
        if self.antwort == 2:
            for item in self.player_1.get_ship_player_area():
                if item not in self.player_1.get_ship_player():
                    self.player_AI.move_shot([item])
        while (count_ship_player_1_dest != 11
               and count_ship_player_2_dest != 11
               and count_ship_AI_dest != 11):
            input(f"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{self.player_1_name} –≤—ã–±–∏—Ä–∞–µ—Ç —Ç–æ—á–∫—É –≤—ã—Å—Ç—Ä–µ–ª–∞\n"
                  f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ —á—Ç–æ —É–≥–æ–¥–Ω–æ\n : ")
            while True:
                print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_1_name}")
                self.player_1.player_map.show_map()
                print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_1_name}")
                self.player_1.player_map_enemy.show_map()
                shot_dot_player_1 = self.player_1.choose_place_dot()
                check_dot = Mistake.check_dot(self,shot_dot_player_1)
                if not check_dot:
                    continue
                shot = self.player_1.move_shot(check_dot)
                if not shot:
                    print("\n–í—ã —É–∂–µ —Å—é–¥–∞ —Å—Ç—Ä–µ–ª—è–ª–∏\n")
                    continue
                dot = self.player_1.get_move_shot()
                if self.amount:
                    if dot[0] in self.player_2.get_ship_player():
                        self.player_2.player_map.installer_pic(dot, 3)
                        self.player_1.player_map_enemy.installer_pic(dot, 3)
                        self.player_2.set_ship_player(dot)
                        print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_1_name}")
                        self.player_1.player_map.show_map()
                        print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_1_name}")
                        self.player_1.player_map_enemy.show_map()
                        check_ship = self.ship_2.check_ship(dot[0])
                        time.sleep(3)
                        count_ship_player_1_dest += 1
                        if check_ship and count_ship_player_1_dest != 11:
                            break
                        if count_ship_player_1_dest == 11:
                            winner = f'{self.player_1_name}'
                            break
                        continue
                    else:
                        self.player_2.player_map.installer_pic(dot, 2)
                        self.player_1.player_map_enemy.installer_pic(dot, 2)
                        print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_1_name}")
                        self.player_1.player_map.show_map()
                        print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_1_name}")
                        self.player_1.player_map_enemy.show_map()
                        print("\n–ú–∏–º–æ\n")
                        time.sleep(3)
                        break
                else:
                    if dot[0] in self.player_AI.get_ship_player():
                        self.player_AI.player_map.installer_pic(dot, 3)
                        self.player_1.player_map_enemy.installer_pic(dot, 3)
                        self.player_AI.set_ship_player(dot)
                        print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_1_name}")
                        self.player_1.player_map.show_map()
                        print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_1_name}")
                        self.player_1.player_map_enemy.show_map()
                        check_ship = self.ship_AI.check_ship( dot[0])
                        time.sleep(3)
                        count_ship_player_1_dest += 1
                        if check_ship and count_ship_player_1_dest != 11:
                            break
                        if count_ship_player_1_dest == 11:
                            winner = f'{self.player_1_name}'
                            break
                        continue
                    else:
                        self.player_AI.player_map.installer_pic(dot, 2)
                        self.player_1.player_map_enemy.installer_pic(dot, 2)
                        print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_1_name}")
                        self.player_1.player_map.show_map()
                        print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_1_name}")
                        self.player_1.player_map_enemy.show_map()
                        print("\n–ú–∏–º–æ\n")
                        time.sleep(3)
                        break
            if self.amount  and (count_ship_player_1_dest != 11
               and count_ship_player_2_dest != 11
               and count_ship_AI_dest != 11):
                input(f"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{self.player_2_name} –≤—ã–±–∏—Ä–∞–µ—Ç —Ç–æ—á–∫—É –≤—ã—Å—Ç—Ä–µ–ª–∞\n"
                      f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ —á—Ç–æ —É–≥–æ–¥–Ω–æ\n : ")
                print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_2_name}")
                self.player_2.player_map.show_map()
                print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_2_name}")
                self.player_2.player_map_enemy.show_map()
                while True:
                    shot_dot_player_2 = self.player_2.choose_place_dot()
                    check_dot = Mistake.check_dot(self,shot_dot_player_2)
                    if not check_dot:
                        continue
                    shot = self.player_2.move_shot(check_dot)
                    if not shot:
                        print("\n–í—ã —É–∂–µ —Å—é–¥–∞ —Å—Ç—Ä–µ–ª—è–ª–∏\n")
                        continue
                    dot = self.player_2.get_move_shot()
                    if dot[0] in self.player_1.get_ship_player():
                        self.player_1.player_map.installer_pic(dot, 3)
                        self.player_2.player_map_enemy.installer_pic(dot, 3)
                        self.player_1.set_ship_player(dot)
                        count_ship_player_2_dest += 1
                        print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_2_name}")
                        self.player_2.player_map.show_map()
                        print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_2_name}")
                        self.player_2.player_map_enemy.show_map()
                        check_ship = self.ship_1.check_ship( dot[0])
                        time.sleep(3)
                        if check_ship and count_ship_player_2_dest != 11:
                            break
                        if count_ship_player_2_dest == 11:
                            winner = f'{self.player_2_name}'
                            break
                        continue
                    else:
                        self.player_1.player_map.installer_pic(dot, 2)
                        self.player_2.player_map_enemy.installer_pic(dot, 2)
                        print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_2_name}")
                        self.player_2.player_map.show_map()
                        print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_2_name}")
                        self.player_2.player_map_enemy.show_map()
                        print("\n–ú–∏–º–æ\n")
                        time.sleep(3)
                        break
            elif (count_ship_player_1_dest != 11
               and count_ship_player_2_dest != 11
               and count_ship_AI_dest != 11):
                while True:
                    shot_dot_player_AI = self.player_AI.ship_and_dot_AI(1,self.player_AI.random_step())
                    shot = self.player_AI.move_shot(shot_dot_player_AI)
                    if not shot:
                        continue
                    dot = self.player_AI.get_move_shot()
                    if dot[0] in self.player_1.get_ship_player():
                        self.player_1.player_map.installer_pic(dot, 3)
                        self.player_1.set_ship_player(dot)
                        count_ship_AI_dest += 1
                        self.player_1.player_map.show_map()
                        print("\nü•Å–•–æ–¥ –ö–æ–º–ø—å—é—Ç–µ—Ä–∞ü•Å\n")
                        print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_1_name}")
                        self.player_1.player_map.show_map()
                        check_ship = self.ship_1.check_ship( dot[0])
                        time.sleep(3)
                        if check_ship and count_ship_AI_dest != 11:
                            print("\n–•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω\n")
                            time.sleep(4)
                            break
                        if count_ship_AI_dest == 11:
                            winner = 'Computer'
                            break
                        continue
                    else:
                        self.player_1.player_map.installer_pic(dot, 2)
                        self.player_AI.player_map_enemy.installer_pic(dot, 2)
                        print("\nü•Å–•–æ–¥ –ö–æ–º–ø—å—é—Ç–µ—Ä–∞ü•Å\n")
                        print(f"–≠—Ç–æ –∫–∞—Ä—Ç–∞ –∏–≥—Ä–æ–∫–∞ - {self.player_1_name}")
                        self.player_1.player_map.show_map()
                        print("–ú–∏–º–æ")
                        print("\n–•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω\n")
                        time.sleep(4)
                        break
        print(f"\n\n\n\n\n–ò—Ç–æ–≥–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –∏–≥—Ä–æ–∫–∞  - üòé{self.player_1_name}üòé\n")
        self.player_1.player_map.show_map()
        if self.amount:
            print(f"\n\n–ò—Ç–æ–≥–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –∏–≥—Ä–æ–∫–∞  - üßì{self.player_2_name}üßì\n")
            self.player_2.player_map.show_map()
        else:
            print(f"\n\n–ò—Ç–æ–≥–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –∏–≥—Ä–æ–∫–∞  - ü•Å'Computer'ü•Å\n")
            self.player_AI.player_map.show_map()
        print(f"\n\n\nüì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£\n"
              f"\t\t  –ü–æ–±–µ–∂–¥–∞–µ—Ç - {winner}\n"
              f"üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£üì£\n\n\n")


    def nummers_of_players(self):
        """The function asks the user to select a game mode"""
        print('\n\n')
        while True:
            try:
                antwort = int(input("–ò–≥—Ä–∞—Ç—å –≤–¥–≤–∞–µ–º –∏–ª–∏ —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º\n"
                      "–í–≤–µ–¥–∏—Ç–µ 1 –ò–≥—Ä–∞—Ç—å —Å –ö–æ–º–ø—å—é—Ç–µ—Ä–æ–º\n"
                      "–í–≤–µ–¥–∏—Ç–µ 2 –ò–≥—Ä–∞—Ç—å –Ω–∞ –¥–≤–æ–∏—Ö\n"
                      "–û—Ç–≤–µ—Ç: "))
                if antwort == 1:
                    antwort = str(input("–ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏?\n"
                                    "–í–≤–µ–¥–∏—Ç–µ 1 –õ–µ–≥–∫–∏–π\n"
                                    "–í–≤–µ–¥–∏—Ç–µ 2 –°–ª–æ–∂–Ω—ã–π\n"
                                      "–û—Ç–≤–µ—Ç: "))
                if 0 < int(antwort) < 3:
                    break
                else:
                    print('\n–ù–µ—Ç —Ç–∞–∫–∏—Ö –æ–ø—Ü–∏–∏–π\n')
                    continue
            except:
                print('\n–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ü–∏—Ñ—Ä—ã!!!!!\n')
                continue
        if isinstance(antwort, int):
            self.choice_two_players(self)
        else:
            self.antwort = int(antwort)
            self.choice_AI_player(self)


    def start(self):
        """The function to start the game, shows the rules and runs the main code"""
        print(Game.__doc__)
        input('–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ —á—Ç–æ —É–≥–æ–¥–Ω–æ.\n–ù–∞—á–Ω–µ–º? :')
        self.nummers_of_players(self)


a= Game
a.start(a)






