

class Mistake:
    """Class for checking input errors from the user when firing or placing a ship"""
    def check_ship(self, type_ship, dot_ship):
        """The function checks for input errors from the user when placing a ship"""
        list_alp = ['A', 'B', 'C', 'D', 'E', 'F', '1', '2', '3', '4', '5', '6']
        try:
            type_ship = int(type_ship)
            ship_split = "".join(dot_ship.split())
            ship_gen_list = [[ship_split[item - 1], ship_split[item]]
                             for item in range(1, len(ship_split), 2)]
            ship_gen_list.sort()
            check_list_alp = []
            check_list_num = []
            index_alp = []
            index_num = []
            for item in ship_gen_list:
                if item[0].isalpha():
                    index_alp.append(list_alp.index(item[0]))
                    check_list_alp.append(item[0])
                    if item[1].isdigit():
                        index_num.append(list_alp.index(item[1]))
                        check_list_num .append(item[1])
                    else:
                        print("–ü–æ—Å—Ç–∞–≤—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –°–Ω–∞—á–∞–ª–æ –±—É–∫–≤—É, –ø–æ—Ç–æ–º —Ü–∏—Ñ—Ä—É")
                        return False
                else:
                    print("–ü–æ—Å—Ç–∞–≤—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –°–Ω–∞—á–∞–ª–æ –±—É–∫–≤—É, –ø–æ—Ç–æ–º —Ü–∏—Ñ—Ä—É")
                    return False
            if check_list_alp.count(check_list_alp[0]) == type_ship:
                if (len(index_num) == 3 and index_num[0] + 1 == index_num[1] == index_num[2] -1
                        or len(index_num) == 2 and index_num[0] + 1 == index_num[1]
                        or len(index_num) == 1):
                    return ship_gen_list
                else:
                    print("–ö–æ—Ä–∞–±–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º) –æ–Ω —Ç–∞–∫ –Ω–µ –∏–∑–≥–∏–±–∞–µ—Ç—Å—è")
                    return False
            elif check_list_num.count(check_list_num[0]) == type_ship:
                if (len(index_alp) == 3 and index_alp[0] + 1 == index_alp[1] == index_alp[2] - 1
                        or len(index_alp) == 2 and index_alp[0] + 1 == index_alp[1]
                        or len(index_alp) == 1):
                    return ship_gen_list
                else:
                    print("–ö–æ—Ä–∞–±–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º) –æ–Ω —Ç–∞–∫ –Ω–µ –∏–∑–≥–∏–±–∞–µ—Ç—Å—è")
                    return False
            else:
                print("–í–∞–º –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ç–∏–ø –∫–æ—Ä–∞–±–ª—è, —É–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ç–∏–ø –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ü–∏—Ñ—Ä–æ–π\n"
                      "–ê —Ç–∞–∫ –∂–µ, —Ç–∏–ø –∫–æ—Ä–æ–±–ª—è –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç–æ—á–µ–∫ –∫–æ—Ä–∞–±–ª—è")
                return False
        except:
            print("–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–µ—Ä–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–æ—Ä–∞–±–ª—è.\n–ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–≤–æ–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–º –∞–ª—Ñ–∞–≤–∏—Ç–æ–º"
                  "–¢–∞–∫ –∂–µ, –≤–∞–º –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ç–∏–ø –∫–æ—Ä–∞–±–ª—è, —É–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ç–∏–ø –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ü–∏—Ñ—Ä–æ–π\n"
                      "–ê —Ç–∞–∫ –∂–µ, —Ç–∏–ø –∫–æ—Ä–æ–±–ª—è –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç–æ—á–µ–∫ –∫–æ—Ä–∞–±–ª—è")
            return False




    def check_dot(self, dot):
        """The function checks for input errors from the user when fired"""
        list_alp = ['A', 'B', 'C', 'D', 'E', 'F', '1', '2', '3', '4', '5', '6']
        try:
            if len(dot) == 2 and dot[0].isalpha() and dot[1].isdigit() and dot[0] in list_alp and dot[1] in list_alp:
                list_dot = [[dot[0], dot[1]]]
                return  list_dot
            else:
                print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—ã–µ –∫–æ—Ä–¥–∏–Ω–∞—Ç—ã. –ü–µ—Ä–≤–∞—è –±—É–∫–≤–∞, –≤—Ç–æ—Ä–∞—è —Ü—ã—Ñ—Ä–∞ –∏ –±–µ–∑ –¥—Ä—É–≥–∏—Ö –∑–Ω–∞–∫–æ–≤\n"
                      "–¢–∞–∫ –∂–µ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –∫–∞—Ä—Ç–µ")
                return False
        except:
            print('–ß—Ç–æ-—Ç–æ –≤—ã –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–æ–¥–∏—Ç–µ')
            return False

    def more_print(self):
        """The function shows the user what types of ships he can place, in case of an input error"""
        print("\n"
              "üåÄüåÄüåÄüåÄüåÄüåÄüåÄüåÄüåÄüåÄüåÄüåÄ\n–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –∏–º–µ—Ç—å:"
              "3-—Ö –ø–∞–ª—É–±–Ω—ã–π - 1 –∫–æ—Ä–∞–±–ª—å"
              "2-—Ö –ø–∞–ª—É–±–Ω—ã–π - 2 –∫–æ—Ä–∞–±–ª—è"
              "1-–æ –ø–∞–ª—É–±–Ω—ã–π - 4 –∫–æ—Ä–∞–±–ª—è\n"
              "–ê —Ç–∞–∫ –∂–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç –Ω–∏—Ö –≤ –æ–¥–Ω—É –∫–ª–µ—Ç–∫—É\n"
              "üåÄüåÄüåÄüåÄüåÄüåÄüåÄüåÄüåÄüåÄüåÄüåÄ\n")
